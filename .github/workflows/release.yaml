name: Release

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch: {}

jobs:
  windup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: windup/windup
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 11
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: OSSRH Snapshot
        run: |
          mvn -DskipTests \
          release:prepare -DpreparationGoals='-DskipTests clean install' \
          release:perform -P jboss-release,gpg-sign
        env:
          MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

  windup-rulesets:
    needs: [windup]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: windup/windup-rulesets
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 11
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: OSSRH Snapshot
        run: |
          mvn -DskipTests \
          release:prepare -DpreparationGoals='-DskipTests clean install' \
          release:perform -P jboss-release,gpg-sign
        env:
          MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

  windup-distribution:
    needs: [windup-rulesets]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: windup/windup-distribution
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 11
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: OSSRH Snapshot
        run: |
          mvn -DskipTests \
          release:prepare -DpreparationGoals='-DskipTests clean install' \
          release:perform -P jboss-release,gpg-sign
        env:
          MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

  windup-web:
    needs: [windup-distribution]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: windup/windup-web
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 11
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: OSSRH Snapshot
        run: |
          mvn -DskipTests \
          release:prepare -DpreparationGoals='-DskipTests clean install' \
          release:perform -P jboss-release,gpg-sign
        env:
          MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

  windup-keyckoak-tool:
    needs: [windup-web]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: windup/windup-keycloak-tool
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 11
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: OSSRH Snapshot
        run: |
          mvn -DskipTests \
          release:prepare -DpreparationGoals='-DskipTests clean install' \
          release:perform -P jboss-release,gpg-sign
        env:
          MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

  windup-web-keycloak-theme:
    needs: [windup-web]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: windup/windup-web-keycloak-theme
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 11
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: OSSRH Snapshot
        run: |
          mvn -DskipTests \
          release:prepare -DpreparationGoals='-DskipTests clean install' \
          release:perform -P jboss-release,gpg-sign
        env:
          MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

  windup-openshift:
    needs: [windup-keyckoak-tool, windup-web-keycloak-theme]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: windup/windup-openshift
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 11
      - name: Build container images
        run: |
          mvn deploy -DskipTests \
          -Ddocker.name.windup.web.executor=quay.io/windupeng/windup-web-openshift-messaging-executor \
          -Ddocker.name.windup.cli=quay.io/windupeng/windup-cli-openshift \
          -Ddocker.name.windup.web=quay.io/windupeng/windup-web-openshift
      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAYIO_USERNAME }}
          password: ${{ secrets.QUAYIO_PASSWORD }}
      - name: Push images to Registry
        run: |
          docker push quay.io/windupeng/windup-cli-openshift
          docker push quay.io/windupeng/windup-web-openshift-messaging-executor
          docker push quay.io/windupeng/windup-web-openshift

  windup-web-distribution:
    needs: [windup-openshift]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: windup/windup-web-distribution
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 11
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: OSSRH Snapshot
        run: |
          mvn -DskipTests \
          release:prepare -DpreparationGoals='-DskipTests clean install' \
          release:perform -P jboss-release,gpg-sign
        env:
          MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

  windup-maven-plugin:
    needs: [windup-web-distribution]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: windup/windup-maven-plugin
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 11
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: OSSRH Snapshot
        run: |
          mvn -DskipTests \
          release:prepare -DpreparationGoals='-DskipTests clean install' \
          release:perform -P jboss-release,gpg-sign
        env:
          MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
